spring.application.name=organization-service

# Enable profiles - set metrics as default and include the dev profile when running locally
# spring.profiles.active=metrics

# Database Configuration
spring.r2dbc.url=r2dbc:postgresql://localhost:5432/organization_service
spring.r2dbc.username=postgres
spring.r2dbc.password=postgres
spring.r2dbc.pool.enabled=true
spring.r2dbc.pool.initial-size=5
spring.r2dbc.pool.max-size=10

# Flyway Configuration
spring.flyway.url=jdbc:postgresql://localhost:5432/organization_service
spring.flyway.user=postgres
spring.flyway.password=postgres
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=true

# SQL Initialization
spring.sql.init.mode=always
#spring.sql.init.mode=always
#spring.data.r2dbc.repositories.enabled=true

#spring.flyway.url=jdbc:postgresql://localhost:5432/postgres
#spring.flyway.user=postgres
#spring.flyway.password=changemeinprod!
#spring.flyway.locations=classpath:db/migration
#spring.flyway.enabled=true

# Kafka Configuration
spring.kafka.bootstrap-servers=kafka:29092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.add.type.headers=true
spring.kafka.producer.properties.spring.json.type.mapping=BusinessUnitEvent:com.clockwise.orgservice.BusinessUnitEvent
spring.kafka.producer.properties.spring.json.use.type.headers=true
spring.kafka.consumer.group-id=org-service-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

kafka.topic.business-unit-events=business-unit-events
kafka.topic.business-unit-name-requests=business-unit-name-requests
kafka.topic.business-unit-name-responses=business-unit-name-responses

# Server Configuration
server.port=8080

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,prometheus
management.endpoint.health.show-details=always
management.endpoint.health.show-components=always
management.health.probes.enabled=true
management.health.livenessState.enabled=true
management.health.readinessState.enabled=true

# Prometheus Configuration
management.metrics.export.prometheus.enabled=true
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.metrics.tags.application=${spring.application.name}

# Logging Config
spring.main.banner-mode=off
logging.config=classpath:log4j2.xml

# Create logs directory
logging.file.path=/app/logs/organization-service

# Ensure the application works with Log4j2 for async logging
spring.main.allow-bean-definition-overriding=true

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,prometheus
management.endpoints.web.base-path=/actuator
management.endpoint.health.show-details=always
management.metrics.tags.application=organization-service
management.metrics.tags.service=organization-service
management.metrics.export.prometheus.enabled=true

# Management specific
management.prometheus.metrics.export.enabled=true 
management.endpoint.prometheus.enabled=true
management.prometheus.metrics.export.descriptions=true 